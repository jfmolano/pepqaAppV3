/* ========================================================================
 * Copyright 2014 PepqaAppV3
 *
 * Licensed under the MIT, The MIT License (MIT)
 * Copyright (c) 2014 PepqaAppV3

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
 * ========================================================================


Source generated by CrudMaker version 1.0.0.201411201032

*/

package co.edu.uniandes.csw.PepqaAppV3.pepqaapp.master.logic.ejb;

import co.edu.uniandes.csw.PepqaAppV3.usuario.logic.dto.UsuarioDTO;
import co.edu.uniandes.csw.PepqaAppV3.usuario.persistence.api.IUsuarioPersistence;
import co.edu.uniandes.csw.PepqaAppV3.evento.logic.dto.EventoDTO;
import co.edu.uniandes.csw.PepqaAppV3.evento.persistence.api.IEventoPersistence;
import co.edu.uniandes.csw.PepqaAppV3.pepqaapp.logic.dto.PepqaAppDTO;
import co.edu.uniandes.csw.PepqaAppV3.pepqaapp.master.logic.api._IPepqaAppMasterLogicService;
import co.edu.uniandes.csw.PepqaAppV3.pepqaapp.master.logic.dto.PepqaAppMasterDTO;
import co.edu.uniandes.csw.PepqaAppV3.pepqaapp.master.persistence.api.IPepqaAppMasterPersistence;
import co.edu.uniandes.csw.PepqaAppV3.pepqaapp.master.persistence.entity.PepqaAppusuariosEntity;
import co.edu.uniandes.csw.PepqaAppV3.pepqaapp.master.persistence.entity.PepqaAppeventosEntity;
import co.edu.uniandes.csw.PepqaAppV3.pepqaapp.persistence.api.IPepqaAppPersistence;
import javax.inject.Inject;

public abstract class _PepqaAppMasterLogicService implements _IPepqaAppMasterLogicService {

    @Inject
    protected IPepqaAppPersistence pepqaappPersistance;
    @Inject
    protected IPepqaAppMasterPersistence pepqaappMasterPersistance;
    @Inject
    protected IEventoPersistence eventoPersistance;
    @Inject
    protected IUsuarioPersistence usuarioPersistance;

    public PepqaAppMasterDTO createMasterPepqaApp(PepqaAppMasterDTO pepqaapp) {
        PepqaAppDTO persistedPepqaAppDTO = pepqaappPersistance.createPepqaApp(pepqaapp.getPepqaAppEntity());
        if (pepqaapp.getCreateusuarios() != null) {
            for (UsuarioDTO usuarioDTO : pepqaapp.getCreateusuarios()) {
                UsuarioDTO createdUsuarioDTO = usuarioPersistance.createUsuario(usuarioDTO);
                PepqaAppusuariosEntity pepqaappUsuarioEntity = new PepqaAppusuariosEntity(persistedPepqaAppDTO.getId(), createdUsuarioDTO.getId());
                pepqaappMasterPersistance.createPepqaAppusuariosEntity(pepqaappUsuarioEntity);
            }
        }
        if (pepqaapp.getCreateeventos() != null) {
            for (EventoDTO eventoDTO : pepqaapp.getCreateeventos()) {
                EventoDTO createdEventoDTO = eventoPersistance.createEvento(eventoDTO);
                PepqaAppeventosEntity pepqaappEventoEntity = new PepqaAppeventosEntity(persistedPepqaAppDTO.getId(), createdEventoDTO.getId());
                pepqaappMasterPersistance.createPepqaAppeventosEntity(pepqaappEventoEntity);
            }
        }
        // update usuario
        if (pepqaapp.getUpdateusuarios() != null) {
            for (UsuarioDTO usuarioDTO : pepqaapp.getUpdateusuarios()) {
                usuarioPersistance.updateUsuario(usuarioDTO);
                PepqaAppusuariosEntity pepqaappUsuarioEntity = new PepqaAppusuariosEntity(persistedPepqaAppDTO.getId(), usuarioDTO.getId());
                pepqaappMasterPersistance.createPepqaAppusuariosEntity(pepqaappUsuarioEntity);
            }
        }
        // update evento
        if (pepqaapp.getUpdateeventos() != null) {
            for (EventoDTO eventoDTO : pepqaapp.getUpdateeventos()) {
                eventoPersistance.updateEvento(eventoDTO);
                PepqaAppeventosEntity pepqaappEventoEntity = new PepqaAppeventosEntity(persistedPepqaAppDTO.getId(), eventoDTO.getId());
                pepqaappMasterPersistance.createPepqaAppeventosEntity(pepqaappEventoEntity);
            }
        }
        return pepqaapp;
    }

    public PepqaAppMasterDTO getMasterPepqaApp(Long id) {
        return pepqaappMasterPersistance.getPepqaApp(id);
    }

    public void deleteMasterPepqaApp(Long id) {
        pepqaappPersistance.deletePepqaApp(id);
    }

    public void updateMasterPepqaApp(PepqaAppMasterDTO pepqaapp) {
        pepqaappPersistance.updatePepqaApp(pepqaapp.getPepqaAppEntity());

        //---- FOR RELATIONSHIP
        // persist new usuario
        if (pepqaapp.getCreateusuarios() != null) {
            for (UsuarioDTO usuarioDTO : pepqaapp.getCreateusuarios()) {
                UsuarioDTO createdUsuarioDTO = usuarioPersistance.createUsuario(usuarioDTO);
                PepqaAppusuariosEntity pepqaappUsuarioEntity = new PepqaAppusuariosEntity(pepqaapp.getPepqaAppEntity().getId(), createdUsuarioDTO.getId());
                pepqaappMasterPersistance.createPepqaAppusuariosEntity(pepqaappUsuarioEntity);
            }
        }
        // update usuario
        if (pepqaapp.getUpdateusuarios() != null) {
            for (UsuarioDTO usuarioDTO : pepqaapp.getUpdateusuarios()) {
                usuarioPersistance.updateUsuario(usuarioDTO);
            }
        }
        // delete usuario
        if (pepqaapp.getDeleteusuarios() != null) {
            for (UsuarioDTO usuarioDTO : pepqaapp.getDeleteusuarios()) {
                pepqaappMasterPersistance.deletePepqaAppusuariosEntity(pepqaapp.getPepqaAppEntity().getId(), usuarioDTO.getId());
                usuarioPersistance.deleteUsuario(usuarioDTO.getId());
            }
        }
        // persist new evento
        if (pepqaapp.getCreateeventos() != null) {
            for (EventoDTO eventoDTO : pepqaapp.getCreateeventos()) {
                EventoDTO createdEventoDTO = eventoPersistance.createEvento(eventoDTO);
                PepqaAppeventosEntity pepqaappEventoEntity = new PepqaAppeventosEntity(pepqaapp.getPepqaAppEntity().getId(), createdEventoDTO.getId());
                pepqaappMasterPersistance.createPepqaAppeventosEntity(pepqaappEventoEntity);
            }
        }
        // update evento
        if (pepqaapp.getUpdateeventos() != null) {
            for (EventoDTO eventoDTO : pepqaapp.getUpdateeventos()) {
                eventoPersistance.updateEvento(eventoDTO);
            }
        }
        // delete evento
        if (pepqaapp.getDeleteeventos() != null) {
            for (EventoDTO eventoDTO : pepqaapp.getDeleteeventos()) {
                pepqaappMasterPersistance.deletePepqaAppeventosEntity(pepqaapp.getPepqaAppEntity().getId(), eventoDTO.getId());
                eventoPersistance.deleteEvento(eventoDTO.getId());
            }
        }
    }
}
